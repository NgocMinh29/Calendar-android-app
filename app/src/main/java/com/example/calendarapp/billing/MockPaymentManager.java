package com.example.calendarapp.billing;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.example.calendarapp.R;
import com.example.calendarapp.payment.BankTransferActivity;

import java.util.Random;

/**
 * Mock Payment Manager cho ƒë·ªì √°n - m√¥ ph·ªèng thanh to√°n th·ª±c t·∫ø
 * Kh√¥ng s·ª≠ d·ª•ng ti·ªÅn th·∫≠t, ch·ªâ ƒë·ªÉ demo
 */
public class MockPaymentManager {
    private static final String TAG = "MockPaymentManager";

    public interface PaymentListener {
        void onPaymentSuccess(String transactionId, String paymentMethod);
        void onPaymentFailed(String error);
        void onPaymentCanceled();
    }

    private Context context;
    private PaymentListener listener;

    public MockPaymentManager(Context context, PaymentListener listener) {
        this.context = context;
        this.listener = listener;
    }

    /**
     * Hi·ªÉn th·ªã dialog ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
     */
    public void showPaymentOptions(Activity activity, String productName, String price) {
        Log.d(TAG, "Showing payment options dialog");

        String[] paymentMethods = {
                "üí≥ Th·∫ª t√≠n d·ª•ng/ghi n·ª£",
                "üè¶ Chuy·ªÉn kho·∫£n ng√¢n h√†ng",
                "üì± V√≠ ƒëi·ªán t·ª≠ (MoMo, ZaloPay)",
                "üí∞ Th·∫ª c√†o ƒëi·ªán tho·∫°i"
        };

        // T·∫°o custom dialog v·ªõi ListView
        AlertDialog.Builder builder = new AlertDialog.Builder(activity);

        // T·∫°o ListView
        ListView listView = new ListView(activity);
        ArrayAdapter<String> adapter = new ArrayAdapter<>(
                activity,
                android.R.layout.simple_list_item_1,
                paymentMethods
        );
        listView.setAdapter(adapter);

        builder.setTitle("Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n")
                .setMessage("S·∫£n ph·∫©m: " + productName + " - " + price + "\n\nVui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:")
                .setView(listView)
                .setNegativeButton("H·ªßy", (dialog, which) -> {
                    Log.d(TAG, "Payment canceled by user");
                    listener.onPaymentCanceled();
                });

        AlertDialog dialog = builder.create();

        // X·ª≠ l√Ω click tr√™n ListView
        listView.setOnItemClickListener((parent, view, position, id) -> {
            String selectedMethod = paymentMethods[position];
            Log.d(TAG, "Selected payment method: " + selectedMethod);
            dialog.dismiss();

            // X·ª≠ l√Ω theo ph∆∞∆°ng th·ª©c ƒë∆∞·ª£c ch·ªçn
            switch (position) {
                case 0: // Th·∫ª t√≠n d·ª•ng
                    processCardPayment(activity, selectedMethod, price);
                    break;
                case 1: // Chuy·ªÉn kho·∫£n ng√¢n h√†ng
                    processBankTransfer(activity, selectedMethod, price);
                    break;
                case 2: // V√≠ ƒëi·ªán t·ª≠
                    processEWalletPayment(activity, selectedMethod, price);
                    break;
                case 3: // Th·∫ª c√†o
                    processCardPayment(activity, selectedMethod, price);
                    break;
                default:
                    processCardPayment(activity, selectedMethod, price);
                    break;
            }
        });

        dialog.show();
        Log.d(TAG, "Payment options dialog shown");
    }

    /**
     * X·ª≠ l√Ω chuy·ªÉn kho·∫£n ng√¢n h√†ng - chuy·ªÉn ƒë·∫øn BankTransferActivity
     */
    private void processBankTransfer(Activity activity, String paymentMethod, String price) {
        Log.d(TAG, "Processing bank transfer");

        Intent intent = new Intent(activity, BankTransferActivity.class);
        intent.putExtra("PAYMENT_METHOD", paymentMethod);
        intent.putExtra("PRICE", price);
        activity.startActivity(intent);

        // ƒê√≥ng activity hi·ªán t·∫°i n·∫øu c·∫ßn
        if (activity.getClass().getSimpleName().equals("PremiumPurchaseActivity")) {
            activity.finish();
        }
    }

    /**
     * X·ª≠ l√Ω thanh to√°n th·∫ª t√≠n d·ª•ng (mock)
     */
    private void processCardPayment(Activity activity, String paymentMethod, String price) {
        processPayment(activity, paymentMethod, price);
    }

    /**
     * X·ª≠ l√Ω thanh to√°n v√≠ ƒëi·ªán t·ª≠ (mock)
     */
    private void processEWalletPayment(Activity activity, String paymentMethod, String price) {
        processPayment(activity, paymentMethod, price);
    }

    /**
     * X·ª≠ l√Ω thanh to√°n v·ªõi ph∆∞∆°ng th·ª©c ƒë√£ ch·ªçn (cho c√°c ph∆∞∆°ng th·ª©c mock)
     */
    private void processPayment(Activity activity, String paymentMethod, String price) {
        Log.d(TAG, "Processing payment with method: " + paymentMethod);

        // Hi·ªÉn th·ªã dialog loading
        AlertDialog loadingDialog = new AlertDialog.Builder(activity)
                .setTitle("ƒêang x·ª≠ l√Ω thanh to√°n...")
                .setMessage("Ph∆∞∆°ng th·ª©c: " + paymentMethod + "\nVui l√≤ng ƒë·ª£i trong gi√¢y l√°t")
                .setCancelable(false)
                .create();
        loadingDialog.show();

        // M√¥ ph·ªèng th·ªùi gian x·ª≠ l√Ω thanh to√°n (2-5 gi√¢y)
        int processingTime = 2000 + new Random().nextInt(3000);

        new Handler().postDelayed(() -> {
            loadingDialog.dismiss();

            // M√¥ ph·ªèng t·ª∑ l·ªá th√†nh c√¥ng 90%
            boolean isSuccess = new Random().nextInt(100) < 90;

            if (isSuccess) {
                showPaymentSuccess(activity, paymentMethod, price);
            } else {
                showPaymentFailed(activity, "Thanh to√°n th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.");
            }
        }, processingTime);
    }

    /**
     * Ph∆∞∆°ng th·ª©c backup - s·ª≠ d·ª•ng multiple buttons
     */
    public void showPaymentOptionsBackup(Activity activity, String productName, String price) {
        Log.d(TAG, "Showing backup payment options");

        AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle("Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n")
                .setMessage("S·∫£n ph·∫©m: " + productName + " - " + price + "\n\nVui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:")
                .setPositiveButton("üí≥ Th·∫ª t√≠n d·ª•ng", (dialog, which) -> {
                    processPayment(activity, "üí≥ Th·∫ª t√≠n d·ª•ng/ghi n·ª£", price);
                })
                .setNeutralButton("üè¶ Ng√¢n h√†ng", (dialog, which) -> {
                    processBankTransfer(activity, "üè¶ Chuy·ªÉn kho·∫£n ng√¢n h√†ng", price);
                })
                .setNegativeButton("H·ªßy", (dialog, which) -> {
                    listener.onPaymentCanceled();
                });

        AlertDialog dialog = builder.create();
        dialog.show();
    }

    /**
     * Hi·ªÉn th·ªã dialog thanh to√°n th√†nh c√¥ng
     */
    private void showPaymentSuccess(Activity activity, String paymentMethod, String price) {
        String transactionId = generateTransactionId();

        Log.d(TAG, "Payment successful - Transaction ID: " + transactionId);

        AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle("‚úÖ Thanh to√°n th√†nh c√¥ng!")
                .setMessage(
                        "Ph∆∞∆°ng th·ª©c: " + paymentMethod + "\n" +
                                "S·ªë ti·ªÅn: " + price + "\n" +
                                "M√£ giao d·ªãch: " + transactionId + "\n\n" +
                                "C·∫£m ∆°n b·∫°n ƒë√£ n√¢ng c·∫•p Premium!"
                )
                .setPositiveButton("OK", (dialog, which) -> {
                    listener.onPaymentSuccess(transactionId, paymentMethod);
                })
                .setCancelable(false)
                .show();
    }

    /**
     * Hi·ªÉn th·ªã dialog thanh to√°n th·∫•t b·∫°i
     */
    private void showPaymentFailed(Activity activity, String error) {
        Log.d(TAG, "Payment failed: " + error);

        AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle("‚ùå Thanh to√°n th·∫•t b·∫°i")
                .setMessage(error + "\n\nVui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin v√† th·ª≠ l·∫°i.")
                .setPositiveButton("Th·ª≠ l·∫°i", (dialog, which) -> {
                    // C√≥ th·ªÉ th·ª≠ l·∫°i
                })
                .setNegativeButton("H·ªßy", (dialog, which) -> {
                    listener.onPaymentFailed(error);
                })
                .show();
    }

    /**
     * T·∫°o m√£ giao d·ªãch gi·∫£
     */
    private String generateTransactionId() {
        return "TXN" + System.currentTimeMillis() + new Random().nextInt(1000);
    }

    /**
     * M√¥ ph·ªèng ki·ªÉm tra tr·∫°ng th√°i thanh to√°n
     */
    public void checkPaymentStatus(String transactionId, PaymentStatusCallback callback) {
        new Handler().postDelayed(() -> {
            // M√¥ ph·ªèng ki·ªÉm tra t·ª´ server
            boolean isVerified = new Random().nextBoolean();
            callback.onStatusChecked(isVerified, transactionId);
        }, 1000);
    }

    public interface PaymentStatusCallback {
        void onStatusChecked(boolean isVerified, String transactionId);
    }
}
